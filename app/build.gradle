apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
	compileSdkVersion 27
	defaultConfig {
		applicationId "com.georgegarside.cryptovalise"
		minSdkVersion 21
		targetSdkVersion 27
		versionCode 1
		versionName "1.0"
		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
	}
	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}
}

dependencies {
	implementation fileTree(dir: 'libs', include: ['*.jar'])
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
	implementation 'com.android.support:appcompat-v7:27.1.0'
	implementation 'com.android.support:support-v4:27.1.0'
	implementation 'com.android.support:recyclerview-v7:27.1.0'
	implementation 'com.android.support:design:27.1.0'
	implementation 'com.android.support.constraint:constraint-layout:1.0.2'
	testImplementation 'junit:junit:4.12'
	androidTestImplementation 'com.android.support.test:runner:1.0.1'
	androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

	// Additional Android support frameworks for backwards compatibility
	implementation 'com.android.support:cardview-v7:27.1.0'

	// Google Play Services
	compile "com.google.android.gms:play-services-auth:11.8.0"

	// Reflection
	compile "org.jetbrains.kotlin:kotlin-reflect:1.2.30"

	// Coroutine dispatchers for Android e.g. UI instead of CommonPool
	compile "org.jetbrains.kotlinx:kotlinx-coroutines-android:0.22.2"

	// Fuel, REST-based HTTP requests
	compile "com.github.kittinunf.fuel:fuel:1.12.0"
	compile "com.github.kittinunf.fuel:fuel-android:1.12.0"
	// Gson (Google JSON)
	compile "com.google.code.gson:gson:2.8.2"
	// Fuel + Google JSON = fuel-gson
	compile "com.github.kittinunf.fuel:fuel-gson:1.12.0"

	// Cache
	compile "com.jakewharton:disklrucache:2.0.2"
	compile "com.github.kittinunf.fuse:fuse:0.2"

	// Test framework
	testCompile "org.junit.jupiter:junit-jupiter-api:5.1.0"
}

kotlin {
	experimental {
		coroutines "enable"
	}
}
