plugins {
	id "com.android.application"
	id "kotlin-android"
	id "kotlin-android-extensions"
	id "org.jetbrains.dokka-android"
	id "de.mannodermaus.android-junit5"
	id "jacoco"
}

android {
	compileSdkVersion 27
	defaultConfig {
		applicationId "com.georgegarside.cryptovalise"
		minSdkVersion 21
		targetSdkVersion 27
		versionCode 1
		versionName "1.0"
		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
	}

	buildTypes {
		debug {
			debuggable true
			testCoverageEnabled true
			shrinkResources false
			minifyEnabled false
			proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
		}
		release {
			shrinkResources true
			minifyEnabled true
			proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
		}
	}

	flavorDimensions "kind"
	productFlavors {
		experimental {
			dimension "kind"
			minSdkVersion 26
		}

		normal {
			dimension "kind"
		}
	}

	testOptions {
		junitPlatform {
			details "tree"
		}
	}

	packagingOptions {
		exclude "META-INF/LICENSE.md"
		exclude "META-INF/LICENSE-notice.md"
	}
}

dependencies {
	implementation fileTree(dir: "libs", include: ["*.jar"])
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
	implementation "com.android.support:appcompat-v7:27.1.1"
	implementation "com.android.support:support-v4:27.1.1"
	implementation "com.android.support:recyclerview-v7:27.1.1"
	implementation "com.android.support:design:27.1.1"
	implementation "com.android.support.constraint:constraint-layout:1.0.2"

	// Additional Android support frameworks for backwards compatibility
	implementation "com.android.support:cardview-v7:27.1.1"

	// Reflection
	implementation "org.jetbrains.kotlin:kotlin-reflect:1.2.31"

	// Co-routine dispatchers for Android e.g. UI instead of CommonPool
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:0.22.2"

	// Fuel, REST-based HTTP requests
	implementation "com.github.kittinunf.fuel:fuel:1.12.0"
	implementation "com.github.kittinunf.fuel:fuel-android:1.12.0"
	// Gson (Google JSON)
	implementation "com.google.code.gson:gson:2.8.2"
	// Fuel + Google JSON = fuel-gson
	implementation "com.github.kittinunf.fuel:fuel-gson:1.12.0"

	// Palette
	implementation "com.android.support:palette-v7:27.1.1"

	// Graph
	implementation "com.github.PhilJay:MPAndroidChart:v3.0.3"

	// Chrome Custom Tabs
	implementation "com.android.support:customtabs:27.1.1"
	implementation "saschpe.android:customtabs:1.1.1"

	// Testing
	testImplementation "junit:junit:4.12"
	testImplementation "org.junit.jupiter:junit-jupiter-params:5.1.0"
	testImplementation "org.junit.jupiter:junit-jupiter-api:5.1.0"
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.1.0"
	androidTestImplementation "com.android.support.test:runner:1.0.1"
	androidTestImplementation "com.android.support.test.espresso:espresso-core:3.0.1"
	androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:2.2.2', {
		exclude group: 'com.android.support', module: 'support-annotations'
		exclude group: 'com.android.support', module: 'support-v4'
		exclude group: 'com.android.support', module: 'design'
		exclude group: 'com.android.support', module: 'recyclerview-v7'
	}
}

kotlin {
	experimental {
		coroutines "enable"
	}
}

dokka {
	outputFormat = "html"
	outputDirectory = "$buildDir/javadoc"
	includeNonPublic = true
}

task jacocoTestReportCustom(type: JacocoReport) {

	reports {
		xml.enabled = true
		html.enabled = true
	}

	def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
	def debugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/experimentalDebug", excludes: fileFilter)
	def mainSrc = "${project.projectDir}/src/main/java"

	sourceDirectories = files([mainSrc])
	classDirectories = files([debugTree])
	executionData = fileTree(dir: "$buildDir", includes: [
			"jacoco/junitPlatformTestExperimentalDebug.exec",
			"outputs/code-coverage/connected/flavors/EXPERIMENTAL/*coverage.ec"
	])
}
